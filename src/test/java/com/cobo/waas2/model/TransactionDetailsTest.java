/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import com.cobo.waas2.model.TransactionApprover;
import com.cobo.waas2.model.TransactionBlockInfo;
import com.cobo.waas2.model.TransactionDestination;
import com.cobo.waas2.model.TransactionFuelingInfo;
import com.cobo.waas2.model.TransactionInitiatorType;
import com.cobo.waas2.model.TransactionRawTxInfo;
import com.cobo.waas2.model.TransactionReplacement;
import com.cobo.waas2.model.TransactionRequestFee;
import com.cobo.waas2.model.TransactionResult;
import com.cobo.waas2.model.TransactionSigner;
import com.cobo.waas2.model.TransactionSource;
import com.cobo.waas2.model.TransactionStatus;
import com.cobo.waas2.model.TransactionSubStatus;
import com.cobo.waas2.model.TransactionTimeline;
import com.cobo.waas2.model.TransactionTokeApproval;
import com.cobo.waas2.model.TransactionType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TransactionDetails
 */
public class TransactionDetailsTest {
    private final TransactionDetails model = new TransactionDetails();

    /**
     * Model tests for TransactionDetails
     */
    @Test
    public void testTransactionDetails() {
        // TODO: test TransactionDetails
    }

    /**
     * Test the property 'transactionId'
     */
    @Test
    public void transactionIdTest() {
        // TODO: test transactionId
    }

    /**
     * Test the property 'coboId'
     */
    @Test
    public void coboIdTest() {
        // TODO: test coboId
    }

    /**
     * Test the property 'requestId'
     */
    @Test
    public void requestIdTest() {
        // TODO: test requestId
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    public void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subStatus'
     */
    @Test
    public void subStatusTest() {
        // TODO: test subStatus
    }

    /**
     * Test the property 'failedReason'
     */
    @Test
    public void failedReasonTest() {
        // TODO: test failedReason
    }

    /**
     * Test the property 'chainId'
     */
    @Test
    public void chainIdTest() {
        // TODO: test chainId
    }

    /**
     * Test the property 'tokenId'
     */
    @Test
    public void tokenIdTest() {
        // TODO: test tokenId
    }

    /**
     * Test the property 'assetId'
     */
    @Test
    public void assetIdTest() {
        // TODO: test assetId
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'destination'
     */
    @Test
    public void destinationTest() {
        // TODO: test destination
    }

    /**
     * Test the property 'result'
     */
    @Test
    public void resultTest() {
        // TODO: test result
    }

    /**
     * Test the property 'fee'
     */
    @Test
    public void feeTest() {
        // TODO: test fee
    }

    /**
     * Test the property 'initiator'
     */
    @Test
    public void initiatorTest() {
        // TODO: test initiator
    }

    /**
     * Test the property 'initiatorType'
     */
    @Test
    public void initiatorTypeTest() {
        // TODO: test initiatorType
    }

    /**
     * Test the property 'confirmedNum'
     */
    @Test
    public void confirmedNumTest() {
        // TODO: test confirmedNum
    }

    /**
     * Test the property 'confirmingThreshold'
     */
    @Test
    public void confirmingThresholdTest() {
        // TODO: test confirmingThreshold
    }

    /**
     * Test the property 'transactionHash'
     */
    @Test
    public void transactionHashTest() {
        // TODO: test transactionHash
    }

    /**
     * Test the property 'blockInfo'
     */
    @Test
    public void blockInfoTest() {
        // TODO: test blockInfo
    }

    /**
     * Test the property 'rawTxInfo'
     */
    @Test
    public void rawTxInfoTest() {
        // TODO: test rawTxInfo
    }

    /**
     * Test the property 'replacement'
     */
    @Test
    public void replacementTest() {
        // TODO: test replacement
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'isLoop'
     */
    @Test
    public void isLoopTest() {
        // TODO: test isLoop
    }

    /**
     * Test the property 'coboCategory'
     */
    @Test
    public void coboCategoryTest() {
        // TODO: test coboCategory
    }

    /**
     * Test the property 'fuelingInfo'
     */
    @Test
    public void fuelingInfoTest() {
        // TODO: test fuelingInfo
    }

    /**
     * Test the property 'createdTimestamp'
     */
    @Test
    public void createdTimestampTest() {
        // TODO: test createdTimestamp
    }

    /**
     * Test the property 'updatedTimestamp'
     */
    @Test
    public void updatedTimestampTest() {
        // TODO: test updatedTimestamp
    }

    /**
     * Test the property 'approvers'
     */
    @Test
    public void approversTest() {
        // TODO: test approvers
    }

    /**
     * Test the property 'signers'
     */
    @Test
    public void signersTest() {
        // TODO: test signers
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'replacedBy'
     */
    @Test
    public void replacedByTest() {
        // TODO: test replacedBy
    }

    /**
     * Test the property 'fueledBy'
     */
    @Test
    public void fueledByTest() {
        // TODO: test fueledBy
    }

    /**
     * Test the property 'tokenApproval'
     */
    @Test
    public void tokenApprovalTest() {
        // TODO: test tokenApproval
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'algorithm'
     */
    @Test
    public void algorithmTest() {
        // TODO: test algorithm
    }

    /**
     * Test the property 'timeline'
     */
    @Test
    public void timelineTest() {
        // TODO: test timeline
    }

}
