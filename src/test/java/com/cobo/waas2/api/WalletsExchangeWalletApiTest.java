/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.api;

import com.cobo.waas2.ApiClient;
import com.cobo.waas2.ApiException;
import com.cobo.waas2.Configuration;
import com.cobo.waas2.model.ChainInfo;
import com.cobo.waas2.model.ErrorResponse;
import com.cobo.waas2.model.ExchangeId;
import com.cobo.waas2.model.ListAssetBalancesForExchangeWallet200Response;
import com.cobo.waas2.model.ListExchanges200ResponseInner;
import com.cobo.waas2.model.ListSupportedAssetsForExchange200Response;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WalletsExchangeWalletApi
 */
@Disabled
public class WalletsExchangeWalletApiTest {
    ApiClient defaultClient = Configuration.getDefaultApiClient();
    // set custom base url
    {
        defaultClient.setBasePath("https://api.sandbox.cobo.com/v2");
        defaultClient.setPrivKey("<YOUR_API_PRIVATE_KEY_IN_HEX>");
    }
    private final WalletsExchangeWalletApi api = new WalletsExchangeWalletApi();

    /**
     * List asset balances
     *
     * This operation retrieves the asset balances in a specified Exchange Wallet. You can filter the results by trading account type or asset ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetBalancesForExchangeWalletTest() throws ApiException {
        UUID walletId = null;
        String tradingAccountTypes = null;
        String assetIds = null;
        Integer limit = null;
        String before = null;
        String after = null;
        ListAssetBalancesForExchangeWallet200Response response = api.listAssetBalancesForExchangeWallet(walletId, tradingAccountTypes, assetIds, limit, before, after);
        // TODO: test validations
    }

    /**
     * List supported exchanges
     *
     * This operation retrieves the information about the exchanges supported by Cobo&#39;s Exchange Wallets, including exchange IDs and trading account types.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listExchangesTest() throws ApiException {
        List<ListExchanges200ResponseInner> response = api.listExchanges();
        // TODO: test validations
    }

    /**
     * List supported assets
     *
     * This operation retrieves all the assets supported by a specified exchange.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSupportedAssetsForExchangeTest() throws ApiException {
        ExchangeId exchangeId = null;
        Integer limit = null;
        String before = null;
        String after = null;
        ListSupportedAssetsForExchange200Response response = api.listSupportedAssetsForExchange(exchangeId, limit, before, after);
        // TODO: test validations
    }

    /**
     * List supported chains
     *
     * This operation retrieves all the chains supported by a specified exchange for a given asset.   You can use this operation to confirm whether you can transfer an asset from or to your Exchange Wallet when using a specific chain. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSupportedChainsForExchangeTest() throws ApiException {
        ExchangeId exchangeId = null;
        String assetId = null;
        List<ChainInfo> response = api.listSupportedChainsForExchange(exchangeId, assetId);
        // TODO: test validations
    }

}
