/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.api;

import com.cobo.waas2.ApiClient;
import com.cobo.waas2.ApiException;
import com.cobo.waas2.Configuration;
import com.cobo.waas2.model.AutoSweepTask;
import com.cobo.waas2.model.CreateAutoSweepTask;
import com.cobo.waas2.model.CreateSweepToAddress;
import com.cobo.waas2.model.ErrorResponse;
import com.cobo.waas2.model.ListAutoSweepTask200Response;
import com.cobo.waas2.model.ListWalletSweepToAddresses200Response;
import com.cobo.waas2.model.SweepToAddress;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AutoSweepApi
 */
@Disabled
public class AutoSweepApiTest {
    ApiClient defaultClient = Configuration.getDefaultApiClient();
    // set custom base url
    {
        defaultClient.setBasePath("https://api.sandbox.cobo.com/v2");
        defaultClient.setPrivKey("<YOUR_API_PRIVATE_KEY_IN_HEX>");
    }
    private final AutoSweepApi api = new AutoSweepApi();

    /**
     * Create auto-sweep task
     *
     * This operation creates an auto-sweep task for the specified wallet and token. The task triggers transactions to sweep the full balance of the specified token to the configured sweep-to address. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAutoSweepTaskTest() throws ApiException {
        CreateAutoSweepTask createAutoSweepTask = null;
        AutoSweepTask response = api.createAutoSweepTask(createAutoSweepTask);
        // TODO: test validations
    }

    /**
     * Create sweep-to address
     *
     * This operation creates a new sweep-to address for the specified wallet. The previously sweep-to address for the same token becomes invalid once the new one is created.  Use this operation to change the sweep-to address when your setup changes, you switch networks, or the current address is compromised or tainted by suspicious funds. You can withdraw any remaining balances from the old sweep-to addresses to the new address or another designated destination.  &lt;Note&gt;Sweep-to addresses are only applicable to MPC Wallets and Web3 Wallets with the auto-sweep feature enabled.&lt;/Note&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWalletSweepToAddressesTest() throws ApiException {
        CreateSweepToAddress createSweepToAddress = null;
        SweepToAddress response = api.createWalletSweepToAddresses(createSweepToAddress);
        // TODO: test validations
    }

    /**
     * Get auto-sweep task details
     *
     * This operation retrieves detailed information about a specified auto-sweep task. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAutoSweepTaskByIdTest() throws ApiException {
        UUID taskId = null;
        AutoSweepTask response = api.getAutoSweepTaskById(taskId);
        // TODO: test validations
    }

    /**
     * List auto-sweep tasks
     *
     * This operation retrieves a list of auto-sweep tasks for the specified wallet. You can filter the results by token ID, task IDs, or a created-time range. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAutoSweepTaskTest() throws ApiException {
        UUID walletId = null;
        String tokenId = null;
        String taskIds = null;
        Long minCreatedTimestamp = null;
        Long maxCreatedTimestamp = null;
        Integer limit = null;
        String before = null;
        String after = null;
        String direction = null;
        ListAutoSweepTask200Response response = api.listAutoSweepTask(walletId, tokenId, taskIds, minCreatedTimestamp, maxCreatedTimestamp, limit, before, after, direction);
        // TODO: test validations
    }

    /**
     * List sweep-to addresses
     *
     * This operation retrieves a list of sweep-to addresses within your wallet. &lt;Note&gt;Sweep-to addresses are only applicable to MPC Wallets and Web3 Wallets with the auto-sweep feature enabled.&lt;/Note&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWalletSweepToAddressesTest() throws ApiException {
        UUID walletId = null;
        ListWalletSweepToAddresses200Response response = api.listWalletSweepToAddresses(walletId);
        // TODO: test validations
    }

}
