/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The elliptic curve type. Possible values include:  - &#x60;secp256k1&#x60; : The &#x60;SECP256K1&#x60; elliptic curve. - &#x60;ed25519&#x60; : The &#x60;ED25519&#x60; elliptic curve. 
 */
@JsonAdapter(TSSCurveType.Adapter.class)
public enum TSSCurveType {
  UNKNOWN(null),
  
  SECP256K1("secp256k1"),
  
  ED25519("ed25519");

  private String value;

  TSSCurveType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TSSCurveType fromValue(String value) {
    for (TSSCurveType b : TSSCurveType.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TSSCurveType> {
    @Override
    public void write(final JsonWriter jsonWriter, final TSSCurveType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TSSCurveType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TSSCurveType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TSSCurveType.fromValue(value);
  }
}

