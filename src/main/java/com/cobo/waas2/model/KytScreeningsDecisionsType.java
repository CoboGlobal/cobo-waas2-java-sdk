/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The KYT screening decision type for a specific transaction based on an external compliance review.  - &#x60;Approval&#x60;: Transaction is approved and can proceed without restrictions - &#x60;ApprovalWithAlert&#x60;: Transaction is approved but flagged for monitoring or additional compliance attention - &#x60;Rejection&#x60;: Transaction is rejected due to identified compliance risks and should be blocked - &#x60;ManualReview&#x60;: Transaction requires manual review by compliance officers before final determination 
 */
@JsonAdapter(KytScreeningsDecisionsType.Adapter.class)
public enum KytScreeningsDecisionsType {
  UNKNOWN(null),
  
  APPROVAL("Approval"),
  
  APPROVALWITHALERT("ApprovalWithAlert"),
  
  REJECTION("Rejection"),
  
  MANUALREVIEW("ManualReview");

  private String value;

  KytScreeningsDecisionsType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static KytScreeningsDecisionsType fromValue(String value) {
    for (KytScreeningsDecisionsType b : KytScreeningsDecisionsType.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<KytScreeningsDecisionsType> {
    @Override
    public void write(final JsonWriter jsonWriter, final KytScreeningsDecisionsType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public KytScreeningsDecisionsType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return KytScreeningsDecisionsType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    KytScreeningsDecisionsType.fromValue(value);
  }
}

