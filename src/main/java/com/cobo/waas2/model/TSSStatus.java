/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The status of the request. Possible values include:  - &#x60;100&#x60; : Unknown. - &#x60;110&#x60; : Scheduling. - &#x60;120&#x60; : Initializing. - &#x60;130&#x60; : Approving. - &#x60;140&#x60; : Processing. - &#x60;160&#x60; : Declined. - &#x60;170&#x60; : Failed. - &#x60;180&#x60; : Canceled. - &#x60;190&#x60; : Completed. 
 */
@JsonAdapter(TSSStatus.Adapter.class)
public enum TSSStatus {
  UNKNOWN(null),
  
  NUMBER_100(100),
  
  NUMBER_110(110),
  
  NUMBER_120(120),
  
  NUMBER_130(130),
  
  NUMBER_140(140),
  
  NUMBER_160(160),
  
  NUMBER_170(170),
  
  NUMBER_180(180),
  
  NUMBER_190(190);

  private Integer value;

  TSSStatus(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TSSStatus fromValue(Integer value) {
    for (TSSStatus b : TSSStatus.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TSSStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final TSSStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TSSStatus read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return TSSStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    Integer value = jsonElement.getAsInt();
    TSSStatus.fromValue(value);
  }
}

