/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The transaction type. Possible values include:    - &#x60;AutoSweep&#x60;: A auto sweep transaction.   - &#x60;AutoFueling&#x60;: A gas station transaction.   - &#x60;AutoFuelingRefund&#x60;: A gas station refund transaction.   - &#x60;SafeTxMessage&#x60;: A safe transaction.    - &#x60;BillPayment&#x60;: A fee station bill payment transaction.    - &#x60;BillRefund&#x60;: A fee station bill payment refund transaction.    - &#x60;CommissionFeeCharge&#x60;: A fee station commission fee charge transaction.    - &#x60;CommissionFeeRefund&#x60;: A fee station commission fee refund transaction.  
 */
@JsonAdapter(TransactionCoboCategory.Adapter.class)
public enum TransactionCoboCategory {
  UNKNOWN(null),
  
  AUTOSWEEP("AutoSweep"),
  
  AUTOFUELING("AutoFueling"),
  
  AUTOFUELINGREFUND("AutoFuelingRefund"),
  
  SAFETXMESSAGE("SafeTxMessage"),
  
  BILLPAYMENT("BillPayment"),
  
  BILLREFUND("BillRefund"),
  
  COMMISSIONFEECHARGE("CommissionFeeCharge"),
  
  COMMISSIONFEEREFUND("CommissionFeeRefund");

  private String value;

  TransactionCoboCategory(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TransactionCoboCategory fromValue(String value) {
    for (TransactionCoboCategory b : TransactionCoboCategory.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TransactionCoboCategory> {
    @Override
    public void write(final JsonWriter jsonWriter, final TransactionCoboCategory enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TransactionCoboCategory read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TransactionCoboCategory.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TransactionCoboCategory.fromValue(value);
  }
}

