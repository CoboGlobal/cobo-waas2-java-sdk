/*
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cobo.waas2.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the source of funds for the refund: - &#x60;Merchant&#x60;: The refund amount will be deducted from the merchant balance. - &#x60;Psp&#x60;: The refund amount will be deducted from the payment gateway balance. 
 */
@JsonAdapter(RefundType.Adapter.class)
public enum RefundType {
  UNKNOWN(null),
  
  MERCHANT("Merchant"),
  
  PSP("Psp");

  private String value;

  RefundType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RefundType fromValue(String value) {
    for (RefundType b : RefundType.values()) {
      if (b == UNKNOWN) continue;
      if (b.value.equals(value)) {
        return b;
      }
    }
    return UNKNOWN;
    // throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<RefundType> {
    @Override
    public void write(final JsonWriter jsonWriter, final RefundType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public RefundType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return RefundType.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    RefundType.fromValue(value);
  }
}

